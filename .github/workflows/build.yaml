name: "Build"

on:
  workflow_dispatch:
  release:
    types: [published]
  #push:
  #  branches:
  #    - master
  #  paths:
  #    - "app/**"
  #    - "nginx/**"
  #    - "docker-compose-build.yaml"

env:
  stack-name: smashedr_node-badges
  stack-file: docker-compose-swarm.yaml

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: read
      packages: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Docker Login"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ vars.GHCR_USER }}
          password: ${{ secrets.GHCR_PASS }}

      - name: "Setup Buildx"
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: "Generate Tags"
        id: tags
        uses: smashedr/docker-tags-action@v1
        with:
          images: "ghcr.io/${{ github.repository }}"

      - name: "Debug Tags"
        continue-on-error: true
        run: |
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "tags: ${{ steps.tags.outputs.tags }}"
          echo "labels: ${{ steps.tags.outputs.labels }}"
          echo "annotations: ${{ steps.tags.outputs.annotations }}"

      - name: "Build and Push"
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tags.outputs.tags }}
          labels: ${{ steps.tags.outputs.labels }}
          annotations: ${{ steps.tags.outputs.annotations }}

      #- name: "Bake and Push"
      #  uses: docker/bake-action@v6
      #  with:
      #    files: ${{ env.stack-file }}
      #    push: true
      #    targets: app
      #    set: |
      #      app.tags=ghcr.io/${{ github.repository }}-app:${{ inputs.version }}
      #      *.platform=linux/amd64,linux/arm64
      #      *.cache-from=type=gha
      #      *.cache-to=type=gha,mode=max

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]

    environment:
      name: swarm
      url: https://badges.cssnr.com/

    steps:
      - name: "Portainer Deploy"
        uses: cssnr/portainer-stack-deploy-action@v1
        with:
          url: ${{ secrets.PORTAINER_URL }}
          token: ${{ secrets.PORTAINER_TOKEN }}
          file: ${{ env.stack-file }}
          name: ${{ env.stack-name }}
          username: ${{ vars.GHCR_USER }}
          password: ${{ secrets.GHCR_PASS }}
